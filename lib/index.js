// Generated by CoffeeScript 1.7.1
(function() {
  var base_options, nodes;

  nodes = require('./node');

  base_options = {
    type: 'tcp',
    election_priority: 0,
    election_timeout: 2000,
    heartbeat_period: 2000,
    heartbeat_timeout: 6000,
    multicast_addr: '239.1.2.3',
    multicast_port: 45555,
    pgm_addr: '239.1.2.4',
    pgm_port: 45555
  };

  exports.getOptions = function(options) {
    var a, isNumber, key, value, _i, _len, _ref, _ref1;
    if (options == null) {
      options = {};
    }
    if (typeof options !== 'object') {
      throw new Error('options must be an object');
    }
    for (key in base_options) {
      value = base_options[key];
      if (!options.hasOwnProperty(key)) {
        options[key] = value;
      }
    }

    /*if options.type not in ['tcp', 'pgm', 'epgm']
    		throw new Error 'type must be tcp, pgm or epgm'
     */
    if ((_ref = options.type) !== 'tcp') {
      throw new Error('type must be tcp');
    }
    isNumber = function(n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    };
    _ref1 = ['election_timeout', 'heartbeat_period', 'heartbeat_timeout', 'multicast_port', 'pgm_port'];
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      a = _ref1[_i];
      if (!isNumber(options[a])) {
        throw new Error("" + a + " must be a number");
      }
    }
    return options;
  };

  exports.createNode = function(options) {
    var node;
    if (options == null) {
      options = {};
    }
    options = exports.getOptions(options);
    if (options.type === 'tcp') {
      node = new nodes.ElectedNode(options);
    } else {
      node = new nodes.PgmNode(options);
    }
    return node;
  };

}).call(this);
